/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            layers = <0>;
        };

        b {
            bindings = <&hm LG(LEFT_SHIFT) MINUS>;
            key-positions = <14 15>;
            layers = <0>;
        };

        c {
            bindings = <&kp GRAVE>;
            key-positions = <26 27>;
            layers = <0>;
        };

        d {
            bindings = <&kp BACKSLASH>;
            key-positions = <9 8>;
            slow-release;
            layers = <0>;
        };

        e {
            bindings = <&hm LG(LEFT_SHIFT) SINGLE_QUOTE>;
            key-positions = <21 20>;
            layers = <0>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
            layers = <0>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
            layers = <0>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <33 32>;
            layers = <0>;
        };

        parent {
            bindings = <&hm LS(LALT) LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            layers = <0>;
        };

        c_parent {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 19>;
            layers = <0>;
        };

        llave {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 4>;
            layers = <0>;
        };

        c_llave {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
            layers = <0>;
        };

        bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
            layers = <0>;
        };

        c_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
            layers = <0>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <19 21>;
            layers = <0>;
        };

        supr {
            bindings = <&kp DELETE>;
            key-positions = <10 9>;
            layers = <0>;
        };

        bloq_mayus {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 14>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB      &kp Q    &kp W       &kp E         &kp R       &kp T                       &kp Y      &kp U      &kp I         &kp O       &kp P            &kp BACKSLASH
&lt 3 MINUS  &lt 1 A  &hm LGUI S  &hm LSHIFT D  &hm LALT F  &hm LA(LC(LG(LSHIFT))) G    &kp H      &lt 5 J    &hm LSHIFT K  &hm LGUI L  &lt 6 SEMICOLON  &kp SQT
&kp TILDE    &lt 3 Z  &kp X       &kp C         &kp V       &kp B                       &kp N      &kp M      &kp COMMA     &kp DOT     &kp FSLH         &kp EQUAL
                                  &kp LCTRL     &kp BSPC    &lt 4 ESC                   &kp ENTER  &kp SPACE  &tog 2
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans              &trans         &kp LC(UP_ARROW)    &trans          &trans        &trans      &trans         &trans  &trans
&trans  &trans  &trans  &trans              &trans         &kp LC(DOWN)        &kp LEFT        &kp DOWN      &kp UP      &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans              &trans         &trans              &kp LG(LEFT)    &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans  &trans
                        &kp LC(LEFT_ARROW)  &kp LC(RIGHT)  &trans              &kp C_PREVIOUS  &kp C_STOP    &kp C_NEXT
            >;

            label = "NAV";
        };

        dvorak {
            bindings = <
&trans  &kp APOS  &kp COMMA  &kp DOT  &kp P   &kp Y     &kp F   &kp G   &kp C   &kp R  &kp L  &kp FSLH
&trans  &kp A     &kp O      &kp E    &kp U   &kp I     &kp D   &kp H   &kp T   &kp N  &kp S  &kp MINUS
&trans  &kp SEMI  &kp Q      &kp J    &kp K   &kp X     &kp B   &kp M   &kp W   &kp V  &kp Z  &trans
                             &trans   &trans  &trans    &trans  &trans  &trans
            >;

            label = "DVORAK";
        };

        config {
            display-name = "CONFIG";
            bindings = <
&trans  &kp N1          &kp N2        &kp N3        &kp N4         &kp LC(UP)      &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &kp PG_UP
&trans  &trans          &trans        &trans        &trans         &trans          &trans    &trans    &trans  &trans     &kp END   &kp PG_DN
                                      &kp LC(LEFT)  &kp LC(RIGHT)  &trans          &kp INS   &kp DEL   &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&kp F1  &kp F2        &kp F3      &kp F4         &kp F5        &kp F6           &kp F7         &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
                                  &trans         &trans        &trans           &trans         &trans        &trans
            >;

            label = "NUMBERS";
        };

        symbols {
            bindings = <
&trans  &trans  &kp LS(LBRC)  &kp LS(RBRC)  &kp MINUS  &kp BACKSLASH       &trans  &trans  &trans         &trans          &trans  &trans
&trans  &trans  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL  &kp SINGLE_QUOTE    &trans  &trans  &kp LS(COLON)  &kp LEFT_SHIFT  &trans  &trans
&trans  &trans  &kp LBKT      &kp RBKT      &kp GRAVE  &trans              &trans  &trans  &trans         &trans          &trans  &trans
                              &trans        &trans     &trans              &trans  &trans  &trans
            >;

            label = "SYMBOLS";
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans            &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans            &trans      &trans  &trans  &trans
                        &trans  &trans  &trans    &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT
            >;

            label = "media";
        };
    };
};
